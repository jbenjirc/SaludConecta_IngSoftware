/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package saludconecta;

import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;

/**
 *
 * @author usuario
 */
public class Pagarr extends javax.swing.JPanel {
    private final String idPaciente;
    // Para almacenar todas las citas sin pagar
private List<Map<String,String>> citasPendientes = new ArrayList<>();
private int citaIndex = 0;


    /** Recibe el identificador del paciente (por ejemplo su CURP). */
 public Pagarr(String idPaciente) {
   this.idPaciente = idPaciente;
       initComponents();
   cargarTodasLasCitasPendientes();
   mostrarCitaActual();  
    System.out.println("DEBUG Pagarr: idPaciente recibido = " + idPaciente);

    // Genera línea de captura y asigna aquí de forma inmediata:
    String linea = generarLineaDeCaptura();
    jTextFieldLinea.setText(linea);

    // Ahora carga la cita, que volverá a invocar al generador si hay datos:
   // cargarDatosPendientes();
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDoctor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldFolio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldEstatus = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldEspecialidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldLinea = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldConsultorio = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldUsuario = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldCosto = new javax.swing.JTextField();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(65, 70, 76));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pagar cita ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1)
                .addContainerGap(990, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel2.setForeground(new java.awt.Color(60, 63, 65));
        jLabel2.setText("FOLIO");

        jTextFieldDoctor.setEditable(false);
        jTextFieldDoctor.setBorder(null);
        jTextFieldDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDoctorActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(60, 63, 65));
        jLabel3.setText("USUARIO");

        jTextFieldFolio.setEditable(false);
        jTextFieldFolio.setBorder(null);
        jTextFieldFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFolioActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(60, 63, 65));
        jLabel4.setText("DOCTOR(A)");

        jTextFieldEstatus.setEditable(false);
        jTextFieldEstatus.setBorder(null);
        jTextFieldEstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEstatusActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(60, 63, 65));
        jLabel5.setText("ESTATUS");

        jTextFieldEspecialidad.setEditable(false);
        jTextFieldEspecialidad.setBorder(null);
        jTextFieldEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEspecialidadActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(60, 63, 65));
        jLabel7.setText("LINEA DE CAPTURA:");

        jTextFieldLinea.setEditable(false);
        jTextFieldLinea.setBorder(null);
        jTextFieldLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLineaActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(60, 63, 65));
        jLabel6.setText("PAGO:");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/images.jpg"))); // NOI18N

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/descarga (6).png"))); // NOI18N

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/descarga (7).png"))); // NOI18N

        jButton1.setText("FILTRAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(60, 63, 65));
        jLabel8.setText("COSTO");

        jTextFieldConsultorio.setEditable(false);
        jTextFieldConsultorio.setBorder(null);
        jTextFieldConsultorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldConsultorioActionPerformed(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(60, 63, 65));
        jLabel9.setText("ESPECIALIDAD");

        jTextFieldUsuario.setEditable(false);
        jTextFieldUsuario.setBorder(null);
        jTextFieldUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsuarioActionPerformed(evt);
            }
        });

        jLabel10.setForeground(new java.awt.Color(60, 63, 65));
        jLabel10.setText("CONSULTORIO");

        jTextFieldCosto.setEditable(false);
        jTextFieldCosto.setBorder(null);
        jTextFieldCosto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCostoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(185, 185, 185))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel6)
                                        .addGap(128, 128, 128)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(418, 418, 418)
                                        .addComponent(jButton1)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 959, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldUsuario)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)))
                        .addGap(55, 55, 55))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldConsultorio, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jTextFieldCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jTextFieldConsultorio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldLinea, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(95, 95, 95))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
 //metodo para realizar una clave de pago 
   private void mostrarCitaActual() {
  if (citasPendientes.isEmpty()) {
    JOptionPane.showMessageDialog(this, "No hay citas pendientes.");
    return;
  }
  Map<String,String> cita = citasPendientes.get(citaIndex);
  jTextFieldFolio.setText(       cita.get("folio"));
  jTextFieldUsuario.setText(     cita.get("usuario"));
  jTextFieldEstatus.setText(     cita.get("estatusTexto"));
  jTextFieldConsultorio.setText(cita.get("consultorio"));
  jTextFieldDoctor.setText(      cita.get("doctor"));
  jTextFieldEspecialidad.setText(cita.get("especialidad"));
  jTextFieldCosto.setText(       cita.get("costo"));
  jTextFieldLinea.setText(       generarLineaDeCaptura());
}

    private String generarLineaDeCaptura() {
        final String CARACTERES = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        SecureRandom rnd = new SecureRandom();
        StringBuilder sb = new StringBuilder(16);
        for (int i = 0; i < 16; i++) {
            int idx = rnd.nextInt(CARACTERES.length());
            sb.append(CARACTERES.charAt(idx));
        }
        return sb.toString();
    }
  //si no borrar desde aqui
private void cargarTodasLasCitasPendientes() {
  citasPendientes.clear();
  String sql =
    "SELECT " +
    "  c.folio_cita, c.cita_usuarioAgenda, c.id_citaEstatus, " +
    "  e.estatusCita, p.consultorio_numero, " +
    "  emp.empleado_nombre + ' ' + emp.empleado_paterno + ' ' + emp.empleado_materno AS doctor, " +
    "  esp.nombre_especialidad AS especialidad, esp.costo_especiliadad AS costo " +
    "FROM Cita c " +
    "  JOIN Cita_Estatus e   ON c.id_citaEstatus   = e.id_citaEstatus " +
    "  JOIN Medico m         ON c.cedula           = m.cedula " +
    "  JOIN Empleado emp     ON m.id_empleado      = emp.id_empleado " +
    "  JOIN Especialidad esp ON m.id_especialidad  = esp.id_especialidad " +
    "  JOIN Consultorio p    ON c.cedula           = p.cedula " +
    "WHERE c.id_paciente = ? AND c.id_citaEstatus <> 1 " +
    "ORDER BY c.cita_fecha DESC, c.cita_hora DESC";
  try ( Connection conn = conexion.CONEXION.obtenerConexion();
        PreparedStatement ps = conn.prepareStatement(sql) ) {
    ps.setString(1, idPaciente);
    try ( ResultSet rs = ps.executeQuery() ) {
      while (rs.next()) {
        Map<String,String> row = new HashMap<>();
        row.put("folio",            rs.getString("folio_cita"));
        row.put("usuario",          rs.getString("cita_usuarioAgenda"));
        row.put("estatusTexto",     rs.getString("estatusCita"));
        row.put("estatusId",        String.valueOf(rs.getInt("id_citaEstatus")));
        row.put("consultorio",      rs.getString("consultorio_numero"));
        row.put("doctor",           rs.getString("doctor"));
        row.put("especialidad",     rs.getString("especialidad"));
        row.put("costo",            rs.getString("costo"));
        citasPendientes.add(row);
      }
    }
  } catch (SQLException ex) {
    ex.printStackTrace();
    JOptionPane.showMessageDialog(this, "Error al cargar citas: " + ex.getMessage());
  }
}
    
//hasta aca
/*
 private void cargarDatosPendientes() {
    // 1) Limpiar campos…
    jTextFieldFolio.setText("");
    jTextFieldUsuario.setText("");
    jTextFieldEstatus.setText("");
    jTextFieldConsultorio.setText("");
    jTextFieldDoctor.setText("");
    jTextFieldEspecialidad.setText("");
    jTextFieldCosto.setText("");
    jTextFieldLinea.setText("");

    // 2) Consulta usando el CURP (cita_usuarioAgenda), no id_paciente numérico
    String sql =
      "SELECT TOP 1\n" +
      "  c.folio_cita,\n" +
      "  c.cita_usuarioAgenda,\n" +
      "  c.id_citaEstatus,\n" +
      "  e.estatusCita,\n" +
      "  p.consultorio_numero,\n" +
      "  emp.empleado_nombre + ' ' + emp.empleado_paterno + ' ' + emp.empleado_materno AS doctor,\n" +
      "  esp.nombre_especialidad  AS especialidad,\n" +
      "  esp.costo_especiliadad   AS costo\n" +
      "FROM Cita c\n" +
      "  JOIN Cita_Estatus e   ON c.id_citaEstatus = e.id_citaEstatus\n" +
      "  JOIN Medico m         ON c.cedula         = m.cedula\n" +
      "  JOIN Empleado emp     ON m.id_empleado    = emp.id_empleado\n" +
      "  JOIN Especialidad esp ON m.id_especialidad= esp.id_especialidad\n" +
      "  JOIN Consultorio p    ON c.cedula         = p.cedula\n" +
      "WHERE c.id_paciente = ?\n" +
      "  AND c.id_citaEstatus    <> 1        -- excluir ya pagadas\n" +
      "ORDER BY c.cita_fecha DESC, c.cita_hora DESC";

    try (
      Connection conn = conexion.CONEXION.obtenerConexion();
      PreparedStatement ps = conn.prepareStatement(sql)
    ) {
      ps.setString(1, idPaciente);  // idPaciente es tu CURP (cadena alfanumérica)
      try (ResultSet rs = ps.executeQuery()) {
        if (!rs.next()) {
          JOptionPane.showMessageDialog(this, "No hay citas pendientes para este paciente.");
          jButton4.setEnabled(false);
          jButton5.setEnabled(false);
          jButton6.setEnabled(false);
          return;
        }
        // 3) Rellenar los campos:
        jTextFieldFolio.setText(        rs.getString("folio_cita") );
        jTextFieldUsuario.setText(      rs.getString("cita_usuarioAgenda") );
        jTextFieldEstatus.setText(      rs.getString("estatusCita") );
        jTextFieldConsultorio.setText(  rs.getString("consultorio_numero") );
        jTextFieldDoctor.setText(       rs.getString("doctor") );
        jTextFieldEspecialidad.setText( rs.getString("especialidad") );
        jTextFieldCosto.setText(        rs.getString("costo") );
        jTextFieldLinea.setText(        generarLineaDeCaptura() );

        // 4) Habilitar botones sólo si falta de pago (estatusId==3)
        int estatusId = rs.getInt("id_citaEstatus");
        boolean faltaPago = (estatusId == 3);
        jButton4.setEnabled(faltaPago);
        jButton5.setEnabled(faltaPago);
        jButton6.setEnabled(faltaPago);
      }
    } catch (SQLException ex) {
      ex.printStackTrace();
      JOptionPane.showMessageDialog(this, "Error al cargar la cita: " + ex.getMessage());
    }
}*/








    private void jTextFieldDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDoctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDoctorActionPerformed

    private void jTextFieldFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFolioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFolioActionPerformed

    private void jTextFieldEstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEstatusActionPerformed

    private void jTextFieldEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEspecialidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldEspecialidadActionPerformed

    private void jTextFieldLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLineaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLineaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  if (citasPendientes.isEmpty()) {
    JOptionPane.showMessageDialog(this, "No hay citas pendientes.");
    return;
  }
  // Muestra la cita actual
  Map<String,String> cita = citasPendientes.get(citaIndex);
  jTextFieldFolio.setText(       cita.get("folio"));
  jTextFieldUsuario.setText(     cita.get("usuario"));
  jTextFieldEstatus.setText(     cita.get("estatusTexto"));
  jTextFieldConsultorio.setText( cita.get("consultorio"));
  jTextFieldDoctor.setText(      cita.get("doctor"));
  jTextFieldEspecialidad.setText(cita.get("especialidad"));
  jTextFieldCosto.setText(       cita.get("costo"));
  jTextFieldLinea.setText(       generarLineaDeCaptura());

  // Avanza índice, o vuelve al inicio si llegamos al final
  citaIndex = (citaIndex + 1) % citasPendientes.size();

   
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldConsultorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldConsultorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldConsultorioActionPerformed

    private void jTextFieldUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsuarioActionPerformed

    private void jTextFieldCostoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCostoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCostoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldConsultorio;
    private javax.swing.JTextField jTextFieldCosto;
    private javax.swing.JTextField jTextFieldDoctor;
    private javax.swing.JTextField jTextFieldEspecialidad;
    private javax.swing.JTextField jTextFieldEstatus;
    private javax.swing.JTextField jTextFieldFolio;
    private javax.swing.JTextField jTextFieldLinea;
    private javax.swing.JTextField jTextFieldUsuario;
    // End of variables declaration//GEN-END:variables
}
